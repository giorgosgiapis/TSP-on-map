!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define("@fireflysemantics/join",["exports"],t):t(((e=e||self).fireflysemantics=e.fireflysemantics||{},e.fireflysemantics.join={}))}(this,(function(e){"use strict";e.join=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=[];if(0===e.length)return"";e.forEach((function(e){if("string"!=typeof e)throw new TypeError("Url components must be of type string. \n                    The "+e+" component is of type "+typeof e)}));var f=e[0];if(f.match(/^[^/:]+:\/*$/)&&e.length>1){var i=e.shift();e[0]=i+e[0]}e[0].match(/^file:\/\/\//)?e[0]=e[0].replace(/^([^/:]+):\/*/,"$1:///"):e[0]=e[0].replace(/^([^/:]+):\/*/,"$1://"),e.forEach((function(t,f){""!==t&&(f>0&&(t=t.replace(/^[\/]+/,"")),t=f<e.length-1?t.replace(/[\/]+$/,""):t.replace(/[\/]+$/,"/"),n.push(t))}));var r=n.join("/"),o=(r=r.replace(/\/(\?|&|#[^!])/g,"$1")).split("?");return r=o.shift()+(o.length>0?"?":"")+o.join("&")},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=fireflysemantics-join.umd.min.js.map